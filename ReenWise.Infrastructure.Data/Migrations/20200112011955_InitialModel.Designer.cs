// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReenWise.Infrastructure.Data.Context;

namespace ReenWise.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ReenWiseDbContext))]
    [Migration("20200112011955_InitialModel")]
    partial class InitialModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.Driver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(128);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.Equipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(128);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<Guid?>("InitialOperatingHoursId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<Guid?>("OperatingHoursId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<Guid?>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InitialOperatingHoursId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("ModelId");

                    b.HasIndex("OperatingHoursId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("UnitId");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.LicensePlate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(128);

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LicensePlates");
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(128);

                    b.Property<float?>("AccuracyRadius")
                        .HasColumnType("real");

                    b.Property<int?>("Course")
                        .HasColumnType("int");

                    b.Property<Guid?>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("InMovement")
                        .HasColumnType("bit");

                    b.Property<float>("Latitude")
                        .HasColumnType("real");

                    b.Property<float>("Longitude")
                        .HasColumnType("real");

                    b.Property<string>("SignalSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Speed")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.Manufacturer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fa6d7df6-8b73-4e94-9f02-87c8496345bf"),
                            Name = "Nordcon AS"
                        },
                        new
                        {
                            Id = new Guid("1157b2ae-384b-49bf-9770-7cf2e7cab37b"),
                            Name = "BNS Container AS"
                        });
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.Model", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(128);

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<float?>("HHeight")
                        .HasColumnType("real");

                    b.Property<float?>("Length")
                        .HasColumnType("real");

                    b.Property<Guid?>("ManufactorerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<float?>("Volume")
                        .HasColumnType("real");

                    b.Property<float?>("Weight")
                        .HasColumnType("real");

                    b.Property<float?>("Width")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9d761bf4-c825-4718-bc5a-07c9b13d0e55"),
                            Description = "B3",
                            Name = "DAJLJA C-05L-L",
                            SerialNumber = "MUM030887"
                        },
                        new
                        {
                            Id = new Guid("9350a074-741d-48d6-97fe-89fb5839887f"),
                            Description = "C Estetisk stygg",
                            Name = "EAARST C-10L",
                            SerialNumber = "MUM030467"
                        },
                        new
                        {
                            Id = new Guid("31ec567e-530f-450a-acd4-c421a9629515"),
                            Description = "C Estetisk stygg",
                            Name = "EABXEL C-10L",
                            SerialNumber = "MUM030764"
                        },
                        new
                        {
                            Id = new Guid("78dcdebf-fcdf-4c1e-860c-238dd3cd9f8c"),
                            Description = "B Estetisk stygg",
                            Name = "EACHRX C-08CL",
                            SerialNumber = "MUM030719"
                        },
                        new
                        {
                            Id = new Guid("be7d8152-565a-4d54-81fb-8322c9e813ea"),
                            Description = "B Estetisk stygg",
                            Name = "EADRBA C-08CL",
                            SerialNumber = "MUM030746"
                        },
                        new
                        {
                            Id = new Guid("49cf1665-0991-4225-b66a-c3f0faac30d0"),
                            Description = "B Fin",
                            Name = "EAEATJ C-22K",
                            SerialNumber = "MUM029340"
                        },
                        new
                        {
                            Id = new Guid("3cd00b26-0f79-41a0-9a0b-53bf569fa68e"),
                            Description = "A Fin",
                            Name = "EAGUUU C-08CL",
                            SerialNumber = "MUM030683"
                        },
                        new
                        {
                            Id = new Guid("169d6027-2165-47f7-96e4-7d274e457d89"),
                            Description = "C Estetisk stygg",
                            Name = "EAHBYT C-10CL",
                            SerialNumber = "MUM030741"
                        },
                        new
                        {
                            Id = new Guid("d3788f7d-a463-4bc5-8d4e-510513dae67a"),
                            Description = "A Fin",
                            Name = "EAJFGU C-10LL",
                            SerialNumber = "MUM029330"
                        },
                        new
                        {
                            Id = new Guid("1c472b8d-17a5-44b6-a5b7-e982f9a7666c"),
                            Description = "C Estetisk stygg",
                            Name = "EAKNKF C-10CL",
                            SerialNumber = "MUM030743"
                        },
                        new
                        {
                            Id = new Guid("5268323a-7572-46a0-8b08-c7cf785b8c05"),
                            Description = "C Estetisk stygg",
                            Name = "EALUNJ C-10L",
                            SerialNumber = "MUM030509"
                        },
                        new
                        {
                            Id = new Guid("8cfea25b-2a65-45f0-bb7c-170c6aea13b4"),
                            Description = "C Estetisk stygg",
                            Name = "EANVZX C-22K",
                            SerialNumber = "MUM030724"
                        });
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.OdoMeter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(128);

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("OdoMeters");
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.OperatingHours", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(128);

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.Property<bool>("UnitDriven")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("OperatingHours");
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("06de7551-ca60-4c5c-9c27-a2df6af7fd64"),
                            Name = "Norsk Gjenvinning AS"
                        },
                        new
                        {
                            Id = new Guid("e76173a3-676e-421e-9e4f-4a64efb35544"),
                            Name = "SmartContainer AS"
                        });
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.Temperature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(128);

                    b.Property<Guid?>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.Property<Guid?>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Temperatures");
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.Unit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(128);

                    b.Property<string>("Health")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(128);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<float?>("Co2Emissions")
                        .HasColumnType("real");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("CommercialClass")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<Guid?>("DriverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float?>("EngineSize")
                        .HasColumnType("real");

                    b.Property<string>("FuelType")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<Guid>("LicensePlateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<Guid?>("OdoMeterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.HasIndex("LicensePlateId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("ModelId");

                    b.HasIndex("OdoMeterId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("UnitId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.Driver", b =>
                {
                    b.HasOne("ReenWise.Domain.Models.Mirror.Organization", "Organization")
                        .WithMany("Drivers")
                        .HasForeignKey("OrganizationId");
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.Equipment", b =>
                {
                    b.HasOne("ReenWise.Domain.Models.Mirror.OperatingHours", "InitialOperatingHours")
                        .WithMany()
                        .HasForeignKey("InitialOperatingHoursId");

                    b.HasOne("ReenWise.Domain.Models.Mirror.Manufacturer", null)
                        .WithMany("Equipments")
                        .HasForeignKey("ManufacturerId");

                    b.HasOne("ReenWise.Domain.Models.Mirror.Model", "Model")
                        .WithMany("Equipments")
                        .HasForeignKey("ModelId");

                    b.HasOne("ReenWise.Domain.Models.Mirror.OperatingHours", "OperatingHours")
                        .WithMany()
                        .HasForeignKey("OperatingHoursId");

                    b.HasOne("ReenWise.Domain.Models.Mirror.Organization", "Organization")
                        .WithMany("Equipments")
                        .HasForeignKey("OrganizationId");

                    b.HasOne("ReenWise.Domain.Models.Mirror.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId");
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.Location", b =>
                {
                    b.HasOne("ReenWise.Domain.Models.Mirror.Equipment", null)
                        .WithMany("Locations")
                        .HasForeignKey("EquipmentId");

                    b.HasOne("ReenWise.Domain.Models.Mirror.Vehicle", null)
                        .WithMany("Locations")
                        .HasForeignKey("VehicleId");
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.Model", b =>
                {
                    b.HasOne("ReenWise.Domain.Models.Mirror.Manufacturer", "Manufacturer")
                        .WithMany("Models")
                        .HasForeignKey("ManufacturerId");
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.Temperature", b =>
                {
                    b.HasOne("ReenWise.Domain.Models.Mirror.Equipment", null)
                        .WithMany("Temperatures")
                        .HasForeignKey("EquipmentId");

                    b.HasOne("ReenWise.Domain.Models.Mirror.Vehicle", null)
                        .WithMany("Temperatures")
                        .HasForeignKey("VehicleId");
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.Vehicle", b =>
                {
                    b.HasOne("ReenWise.Domain.Models.Mirror.Driver", "Driver")
                        .WithMany("Vehicles")
                        .HasForeignKey("DriverId");

                    b.HasOne("ReenWise.Domain.Models.Mirror.LicensePlate", "LicensePlate")
                        .WithMany()
                        .HasForeignKey("LicensePlateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReenWise.Domain.Models.Mirror.Manufacturer", null)
                        .WithMany("Vehicles")
                        .HasForeignKey("ManufacturerId");

                    b.HasOne("ReenWise.Domain.Models.Mirror.Model", "Model")
                        .WithMany("Vehicles")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReenWise.Domain.Models.Mirror.OdoMeter", "OdoMeter")
                        .WithMany()
                        .HasForeignKey("OdoMeterId");

                    b.HasOne("ReenWise.Domain.Models.Mirror.Organization", "Organization")
                        .WithMany("Vehicles")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReenWise.Domain.Models.Mirror.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using ReenWise.Infrastructure.Data.Context;

namespace ReenWise.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ReenWiseDbContext))]
    [Migration("20200120205040_InitalModel")]
    partial class InitalModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.Driver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(128);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.Equipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(128);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<Guid?>("InitialOperatingHoursId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Point>("Location")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.Property<Guid?>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<Guid?>("OperatingHoursId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<Guid?>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InitialOperatingHoursId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("ModelId");

                    b.HasIndex("OperatingHoursId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("UnitId");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.LicensePlate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(128);

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LicensePlates");
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(128);

                    b.Property<float?>("AccuracyRadius")
                        .HasColumnType("real");

                    b.Property<int?>("Course")
                        .HasColumnType("int");

                    b.Property<Guid?>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("InMovement")
                        .HasColumnType("bit");

                    b.Property<float>("Latitude")
                        .HasColumnType("real");

                    b.Property<float>("Longitude")
                        .HasColumnType("real");

                    b.Property<string>("SignalSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Speed")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.Manufacturer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d12520c6-56a4-4ce0-b9cb-afeaa96277ac"),
                            Name = "Nordcon AS"
                        },
                        new
                        {
                            Id = new Guid("dcbdd01d-fbf8-4b42-8a0e-e814acfb6ec0"),
                            Name = "BNS Container AS"
                        });
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.Model", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(128);

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<float?>("HHeight")
                        .HasColumnType("real");

                    b.Property<float?>("Length")
                        .HasColumnType("real");

                    b.Property<Guid?>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<float?>("Volume")
                        .HasColumnType("real");

                    b.Property<float?>("Weight")
                        .HasColumnType("real");

                    b.Property<float?>("Width")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Models");
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.OdoMeter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(128);

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("OdoMeters");
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.OperatingHours", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(128);

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.Property<bool>("UnitDriven")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("OperatingHours");
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d4457ee2-8690-4367-b9e2-39b300581556"),
                            Name = "Norsk Gjenvinning AS"
                        },
                        new
                        {
                            Id = new Guid("2cbeca1a-d4db-41f3-bd14-38922aa0b76f"),
                            Name = "SmartContainer AS"
                        });
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.Temperature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(128);

                    b.Property<Guid?>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.Property<Guid?>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Temperatures");
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.Unit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(128);

                    b.Property<string>("Health")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasMaxLength(128);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<float?>("Co2Emissions")
                        .HasColumnType("real");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("CommercialClass")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<Guid?>("DriverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float?>("EngineSize")
                        .HasColumnType("real");

                    b.Property<string>("FuelType")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<Guid>("LicensePlateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Point>("Location")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.Property<Guid?>("ManufacturerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(1024)")
                        .HasMaxLength(1024);

                    b.Property<Guid?>("OdoMeterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.HasIndex("LicensePlateId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("ModelId");

                    b.HasIndex("OdoMeterId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("UnitId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.Driver", b =>
                {
                    b.HasOne("ReenWise.Domain.Models.Mirror.Organization", "Organization")
                        .WithMany("Drivers")
                        .HasForeignKey("OrganizationId");
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.Equipment", b =>
                {
                    b.HasOne("ReenWise.Domain.Models.Mirror.OperatingHours", "InitialOperatingHours")
                        .WithMany()
                        .HasForeignKey("InitialOperatingHoursId");

                    b.HasOne("ReenWise.Domain.Models.Mirror.Manufacturer", null)
                        .WithMany("Equipment")
                        .HasForeignKey("ManufacturerId");

                    b.HasOne("ReenWise.Domain.Models.Mirror.Model", "Model")
                        .WithMany("Equipments")
                        .HasForeignKey("ModelId");

                    b.HasOne("ReenWise.Domain.Models.Mirror.OperatingHours", "OperatingHours")
                        .WithMany()
                        .HasForeignKey("OperatingHoursId");

                    b.HasOne("ReenWise.Domain.Models.Mirror.Organization", "Organization")
                        .WithMany("Equipment")
                        .HasForeignKey("OrganizationId");

                    b.HasOne("ReenWise.Domain.Models.Mirror.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId");
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.Location", b =>
                {
                    b.HasOne("ReenWise.Domain.Models.Mirror.Equipment", null)
                        .WithMany("Locations")
                        .HasForeignKey("EquipmentId");

                    b.HasOne("ReenWise.Domain.Models.Mirror.Vehicle", null)
                        .WithMany("Locations")
                        .HasForeignKey("VehicleId");
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.Model", b =>
                {
                    b.HasOne("ReenWise.Domain.Models.Mirror.Manufacturer", "Manufacturer")
                        .WithMany("Models")
                        .HasForeignKey("ManufacturerId");
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.Temperature", b =>
                {
                    b.HasOne("ReenWise.Domain.Models.Mirror.Equipment", null)
                        .WithMany("Temperatures")
                        .HasForeignKey("EquipmentId");

                    b.HasOne("ReenWise.Domain.Models.Mirror.Vehicle", null)
                        .WithMany("Temperatures")
                        .HasForeignKey("VehicleId");
                });

            modelBuilder.Entity("ReenWise.Domain.Models.Mirror.Vehicle", b =>
                {
                    b.HasOne("ReenWise.Domain.Models.Mirror.Driver", "Driver")
                        .WithMany("Vehicles")
                        .HasForeignKey("DriverId");

                    b.HasOne("ReenWise.Domain.Models.Mirror.LicensePlate", "LicensePlate")
                        .WithMany()
                        .HasForeignKey("LicensePlateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReenWise.Domain.Models.Mirror.Manufacturer", null)
                        .WithMany("Vehicles")
                        .HasForeignKey("ManufacturerId");

                    b.HasOne("ReenWise.Domain.Models.Mirror.Model", "Model")
                        .WithMany("Vehicles")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReenWise.Domain.Models.Mirror.OdoMeter", "OdoMeter")
                        .WithMany()
                        .HasForeignKey("OdoMeterId");

                    b.HasOne("ReenWise.Domain.Models.Mirror.Organization", "Organization")
                        .WithMany("Vehicles")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReenWise.Domain.Models.Mirror.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId");
                });
#pragma warning restore 612, 618
        }
    }
}
